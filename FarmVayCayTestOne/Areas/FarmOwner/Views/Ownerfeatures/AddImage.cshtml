@using Farm.Models.Models
@model FarmImages

<link rel="stylesheet" href="~/css/AddFarmImage.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

<form asp-action="AddImage" asp-controller="OwnerFeatures" asp-area="FarmOwner"
      method="post" enctype="multipart/form-data">
      <input type="hidden" asp-for="FarmId" />
    <div class="container">
        <div class="upload-container">
            <h1>Add Farm Images</h1>

            <input type="hidden" name="FarmId" value="@ViewBag.FarmId" />

            <!-- Upload Section -->
            <div class="upload-section">
                <div class="upload-box" id="uploadBox">
                    <i class="bi bi-cloud-upload"></i>
                    <p>Drag & Drop images here or</p>
                    <label for="fileInput" class="upload-btn">Choose Files</label>
                    <input type="file" id="fileInput" name="images" multiple accept="image/*" hidden>
                </div>
            </div>

            <!-- Preview -->
            <div class="preview-section">
                <h2>Selected Images</h2>
                <div class="image-grid" id="imageGrid"></div>
            </div>

            <!-- Upload progress -->
            <div class="upload-progress" id="uploadProgress">
                <div class="progress-bar">
                    <div class="progress" id="progress"></div>
                </div>
                <p class="progress-text">0%</p>
            </div>

            <!-- Action Buttons -->
            <div class="action-buttons">
                <button type="submit" class="submit-btn" id="uploadBtn">Upload Images</button>
                <button type="button" class="cancel-btn" id="cancelBtn">Cancel</button>
            </div>
        </div>
    </div>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const uploadBox = document.getElementById('uploadBox');
        const fileInput = document.getElementById('fileInput');
        const imageGrid = document.getElementById('imageGrid');
        const cancelBtn = document.getElementById('cancelBtn');

        // Drag & Drop
        uploadBox.addEventListener('dragover', (e) => {
            e.preventDefault();
            uploadBox.classList.add('dragover');
        });

        uploadBox.addEventListener('dragleave', () => {
            uploadBox.classList.remove('dragover');
        });

        uploadBox.addEventListener('drop', (e) => {
            e.preventDefault();
            uploadBox.classList.remove('dragover');
            handleFiles(e.dataTransfer.files);
        });

        // File input
        fileInput.addEventListener('change', (e) => {
            handleFiles(e.target.files);
        });

        // Preview handler
        function handleFiles(files) {
            Array.from(files).forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = (e) => {
                        const imgContainer = document.createElement('div');
                        imgContainer.className = 'image-container';
                        imgContainer.innerHTML = `
                            <img src="${e.target.result}" alt="Preview">
                            <button class="remove-btn"><i class="bi bi-x"></i></button>
                        `;
                        imageGrid.appendChild(imgContainer);

                        // Remove button
                        imgContainer.querySelector('.remove-btn').addEventListener('click', () => {
                            imgContainer.remove();
                        });
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        // Cancel button
        cancelBtn.addEventListener('click', () => {
            imageGrid.innerHTML = '';
            fileInput.value = ''; // Reset input
        });
    });
</script>
